{"ast":null,"code":"var _jsxFileName = \"/Users/roy/Downloads/binary-questionnaire-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Question({\n  question,\n  onAnswer,\n  show\n}) {\n  _s();\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const handleAnswerClick = selectedType => {\n    setSelectedAnswer(selectedType);\n    onAnswer(selectedType === question.type);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: show ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: question.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedAnswer === 0 ? 'selected' : '',\n          onClick: () => handleAnswerClick(0),\n          children: \"Fruit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: selectedAnswer === 1 ? 'selected' : '',\n          onClick: () => handleAnswerClick(1),\n          children: \"Vegetable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Correct or Wrong: \", selectedAnswer === question.type ? 'Correct' : 'Wrong']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Question, \"PzLy16irkb6MWo7B4jX8+cvoSO4=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Question","question","onAnswer","show","_s","selectedAnswer","setSelectedAnswer","handleAnswerClick","selectedType","type","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","_c","$RefreshReg$"],"sources":["/Users/roy/Downloads/binary-questionnaire-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Question({ question, onAnswer, show }) {\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n\n  const handleAnswerClick = (selectedType) => {\n    setSelectedAnswer(selectedType);\n    onAnswer(selectedType === question.type);\n  };\n\n  return (\n    <div className=\"question-container\">\n      {show ? (\n        <div>\n          <h2>{question.name}</h2>\n          <p>{question.text}</p>\n          <div className=\"answer-buttons\">\n            <button\n              className={selectedAnswer === 0 ? 'selected' : ''}\n              onClick={() => handleAnswerClick(0)}\n            >\n              Fruit\n            </button>\n            <button\n              className={selectedAnswer === 1 ? 'selected' : ''}\n              onClick={() => handleAnswerClick(1)}\n            >\n              Vegetable\n            </button>\n          </div>\n        </div>\n      ) : (\n        <p>Correct or Wrong: {selectedAnswer === question.type ? 'Correct' : 'Wrong'}</p>\n      )}\n    </div>\n  );\n}\n\nexport default Question;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMU,iBAAiB,GAAIC,YAAY,IAAK;IAC1CF,iBAAiB,CAACE,YAAY,CAAC;IAC/BN,QAAQ,CAACM,YAAY,KAAKP,QAAQ,CAACQ,IAAI,CAAC;EAC1C,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCR,IAAI,gBACHJ,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,EAAKV,QAAQ,CAACW;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBjB,OAAA;QAAAY,QAAA,EAAIV,QAAQ,CAACgB;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBjB,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BZ,OAAA;UACEW,SAAS,EAAEL,cAAc,KAAK,CAAC,GAAG,UAAU,GAAG,EAAG;UAClDa,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAAC,CAAC,CAAE;UAAAI,QAAA,EACrC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTjB,OAAA;UACEW,SAAS,EAAEL,cAAc,KAAK,CAAC,GAAG,UAAU,GAAG,EAAG;UAClDa,OAAO,EAAEA,CAAA,KAAMX,iBAAiB,CAAC,CAAC,CAAE;UAAAI,QAAA,EACrC;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAENjB,OAAA;MAAAY,QAAA,GAAG,oBAAkB,EAACN,cAAc,KAAKJ,QAAQ,CAACQ,IAAI,GAAG,SAAS,GAAG,OAAO;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EACjF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACZ,EAAA,CAlCQJ,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AAoCjB,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}