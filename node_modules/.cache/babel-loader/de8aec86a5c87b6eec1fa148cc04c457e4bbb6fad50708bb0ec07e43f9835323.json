{"ast":null,"code":"var _jsxFileName = \"/Users/roy/Downloads/binary-questionnaire-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css'; // You can create your own CSS file for styling\n\nimport Question from './components/Question';\nimport Answer from './components/Answer';\nimport Statistics from './components/Statistics';\nimport questionsData from './data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  useEffect(() => {\n    setQuestions(questionsData);\n  }, []);\n  const handleAnswer = isCorrect => {\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: currentQuestionIndex < questions.length ? /*#__PURE__*/_jsxDEV(Question, {\n            question: questions[currentQuestionIndex],\n            onAnswer: handleAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n            correctAnswers: correctAnswers\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/answer\",\n          children: /*#__PURE__*/_jsxDEV(Answer, {\n            correct: true,\n            text: \"Sample answer text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OCLZ9kEvW3pPqmx/F4SDLRwEI4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Question","Answer","Statistics","questionsData","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","handleAnswer","isCorrect","length","children","className","exact","path","question","onAnswer","fileName","_jsxFileName","lineNumber","columnNumber","correct","text","_c","$RefreshReg$"],"sources":["/Users/roy/Downloads/binary-questionnaire-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css'; // You can create your own CSS file for styling\n\nimport Question from './components/Question';\nimport Answer from './components/Answer';\nimport Statistics from './components/Statistics';\nimport questionsData from './data/questions.json';\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  useEffect(() => {\n    setQuestions(questionsData);\n  }, []);\n\n  const handleAnswer = (isCorrect) => {\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {currentQuestionIndex < questions.length ? (\n              <Question\n                question={questions[currentQuestionIndex]}\n                onAnswer={handleAnswer}\n              />\n            ) : (\n              <Statistics correctAnswers={correctAnswers} />\n            )}\n          </Route>\n          <Route path=\"/answer\">\n            <Answer correct={true} text=\"Sample answer text\" />\n          </Route>\n          {/* Add more routes for other components if needed */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAO,WAAW,CAAC,CAAC;;AAEpB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACdc,YAAY,CAACN,aAAa,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,YAAY,GAAIC,SAAS,IAAK;IAClC,IAAIA,SAAS,EAAE;MACbF,iBAAiB,CAACD,cAAc,GAAG,CAAC,CAAC;IACvC;IAEA,IAAIF,oBAAoB,GAAGF,SAAS,CAACQ,MAAM,GAAG,CAAC,EAAE;MAC/CL,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;IACnD;EACF,CAAC;EAED,oBACEL,OAAA,CAACR,MAAM;IAAAoB,QAAA,eACLZ,OAAA;MAAKa,SAAS,EAAC,KAAK;MAAAD,QAAA,eAClBZ,OAAA,CAACN,MAAM;QAAAkB,QAAA,gBACLZ,OAAA,CAACP,KAAK;UAACqB,KAAK;UAACC,IAAI,EAAC,GAAG;UAAAH,QAAA,EAClBP,oBAAoB,GAAGF,SAAS,CAACQ,MAAM,gBACtCX,OAAA,CAACL,QAAQ;YACPqB,QAAQ,EAAEb,SAAS,CAACE,oBAAoB,CAAE;YAC1CY,QAAQ,EAAER;UAAa;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,gBAEFrB,OAAA,CAACH,UAAU;YAACU,cAAc,EAAEA;UAAe;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC9C;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACRrB,OAAA,CAACP,KAAK;UAACsB,IAAI,EAAC,SAAS;UAAAH,QAAA,eACnBZ,OAAA,CAACJ,MAAM;YAAC0B,OAAO,EAAE,IAAK;YAACC,IAAI,EAAC;UAAoB;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACnB,EAAA,CAzCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}