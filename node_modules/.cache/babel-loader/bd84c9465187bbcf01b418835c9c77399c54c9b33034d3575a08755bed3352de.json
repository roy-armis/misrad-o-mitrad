{"ast":null,"code":"var _jsxFileName = \"/Users/roy/Downloads/misrad-o-mitrad/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport Question from './components/Question';\nimport Answer from './components/Answer';\nimport Statistics from './components/Statistics';\nimport { APP_STATES } from './consts';\nimport questionsData from './data/questions.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = shuffle(questionsData);\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\nfunction App() {\n  _s();\n  const [currentState, setCurrentState] = useState(APP_STATES.QUESTION);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [lastAnswerCorrect, setLastAnswerCorrect] = useState(null);\n  const handleAnswer = isCorrect => {\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n    setLastAnswerCorrect(isCorrect);\n    setCurrentState(APP_STATES.ANSWER);\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentState(APP_STATES.QUESTION);\n    } else {\n      setCurrentState(APP_STATES.FINISHED);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentState === APP_STATES.QUESTION && /*#__PURE__*/_jsxDEV(Question, {\n      question: questions[currentQuestionIndex],\n      onAnswer: handleAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), currentState === APP_STATES.ANSWER && /*#__PURE__*/_jsxDEV(Answer, {\n      correct: lastAnswerCorrect,\n      onNextQuestion: handleNextQuestion,\n      isLastQuestion: currentQuestionIndex === questions.length - 1,\n      question: questions[currentQuestionIndex]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), currentState === APP_STATES.FINISHED && /*#__PURE__*/_jsxDEV(Statistics, {\n      correctAnswers: correctAnswers,\n      totalQuestions: questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MbzIaA1SjDkBBC9Ez6IT+wtRkV8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Question","Answer","Statistics","APP_STATES","questionsData","jsxDEV","_jsxDEV","questions","shuffle","array","i","length","j","Math","floor","random","App","_s","currentState","setCurrentState","QUESTION","currentQuestionIndex","setCurrentQuestionIndex","correctAnswers","setCorrectAnswers","lastAnswerCorrect","setLastAnswerCorrect","handleAnswer","isCorrect","ANSWER","handleNextQuestion","FINISHED","className","children","question","onAnswer","fileName","_jsxFileName","lineNumber","columnNumber","correct","onNextQuestion","isLastQuestion","totalQuestions","_c","$RefreshReg$"],"sources":["/Users/roy/Downloads/misrad-o-mitrad/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport Question from './components/Question';\nimport Answer from './components/Answer';\nimport Statistics from './components/Statistics';\n\nimport { APP_STATES } from './consts';\n\nimport questionsData from './data/questions.json';\n\nconst questions = shuffle(questionsData);\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n}\n\nfunction App() {\n  const [currentState, setCurrentState] = useState(APP_STATES.QUESTION);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [lastAnswerCorrect, setLastAnswerCorrect] = useState(null);\n\n\n  const handleAnswer = (isCorrect) => {\n    if (isCorrect) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n    setLastAnswerCorrect(isCorrect);\n    setCurrentState(APP_STATES.ANSWER);\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setCurrentState(APP_STATES.QUESTION);\n    } else {\n      setCurrentState(APP_STATES.FINISHED);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {currentState === APP_STATES.QUESTION && (\n        <Question\n          question={questions[currentQuestionIndex]}\n          onAnswer={handleAnswer}\n        />\n      )}\n      {currentState === APP_STATES.ANSWER && (\n        <Answer\n          correct={lastAnswerCorrect}\n          onNextQuestion={handleNextQuestion}\n          isLastQuestion={currentQuestionIndex === questions.length - 1}\n          question={questions[currentQuestionIndex]}\n        />\n      )}\n      {currentState === APP_STATES.FINISHED && (\n        <Statistics correctAnswers={correctAnswers} totalQuestions={questions.length} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}